#include <iostream>
#include <stdlib.h>

using namespace std;

struct Nodo{
  char dato;
  Nodo *siguiente;

};

void menu();
void insertarCola(Nodo *&, Nodo *&, char);
bool cola_vacia(Nodo *);
void eliminandoCola(Nodo *&, Nodo *&, char &);


int main() {
  menu();
}

void menu(){
  int opc;
  char dato;
  Nodo *frente = NULL;
  Nodo *fin = NULL;

  do{
    cout<<"\t .:Menu:.\n";
    cout<<"1. Insertar un caracter en la cola"<<endl;
    cout<<"2. Mostrar los elementos de la cola"<<endl;
    cout<<"3. Salir"<<endl;
    cout<<"Opcion:_";
    cin>>opc;

    switch(opc){
      case 1:
              cout<<"Ingrese un caracter para agregar a la cola\n";
              cin>>dato;
              insertarCola(frente, fin, dato);
              break;

      case 2: 
              cout<<"\n Mostrando los elementos de la cola: ";
              while(frente !=NULL){
                eliminandoCola(frente, fin, dato);
                if(frente != NULL){
                  cout<<dato<<", ";
                  
                }
                else{
                  cout<<dato<<". "<<endl;
                }
              }
              break;

      case 3: break;
    }
    
  }while(opc!=3);
  
}

//FunciÃ³n para insertar elementos en la cola
void insertarCola(Nodo *&frente, Nodo *&fin, char n){
  Nodo *nuevo_nodo = new Nodo();

  nuevo_nodo->dato=n;
  nuevo_nodo->siguiente=NULL;

  //la cola esta vacia?
  if(cola_vacia(frente)){
    frente=nuevo_nodo;
    fin=nuevo_nodo;
  }
  else{
    fin->siguiente=nuevo_nodo;
  }

  fin = nuevo_nodo;
}

bool cola_vacia(Nodo *frente){
  return (frente == NULL?true:false);
}

//funcion para eliminar elementos de la cola
void eliminandoCola(Nodo *&frente, Nodo *&fin, char &n){
  //asignado el primer elemento de la cola
  n = frente->dato;
  Nodo *aux = frente;

  if (frente == NULL){
    frente = NULL;
    fin = NULL;
    
  } else{
    frente = frente->siguiente;
  }

  delete aux;
}
